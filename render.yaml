# render.yaml
services:
  # Backend (FastAPI)
  - type: web
    name: web
    build:
      dockerfilePath: ./backend/Dockerfile
      context: .
    envVars:
      - key: DATABASE_URL
        fromDatabase:
          name: postgres
          property: connectionString
      - key: REDIS_URL_CACHE
        fromService:
          type: redis
          name: redis
          property: connectionString
      - key: REDIS_URL_QUEUE
        fromService:
          type: redis
          name: redis
          property: connectionString
      - group: app-env

  # Frontend
  - type: web
    name: frontend
    build:
      dockerfilePath: ./frontend/Dockerfile
      context: .
    envVars:
      - key: VITE_API_URL
        value: https://web.onrender.com # Update after deployment

  # Celery Worker
  - type: backgroundWorker
    name: worker
    build:
      dockerfilePath: ./backend/Dockerfile
      context: .
    command: python -m celery -A app.core.celery_app worker --pool=solo -l INFO -Q notifications
    envVars:
      - group: app-env

  # Celery Beat
  - type: backgroundWorker
    name: beat
    build:
      dockerfilePath: ./backend/Dockerfile
      context: .
    command: python -m celery -A app.core.celery_app beat -l INFO
    envVars:
      - group: app-env

databases:
  - name: postgres
    type: postgres
    plan: free
    databaseName: ${POSTGRES_DB}
    user: ${POSTGRES_USER}

  - name: redis
    type: redis
    plan: free

envGroups:
  - name: app-env
    environmentVariables:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      SENDGRID_API_KEY: ${SENDGRID_API_KEY}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      JWT_ALGORITHM: ${JWT_ALGORITHM}
      JWT_EXPIRATION_TIME: ${JWT_EXPIRATION_TIME}
      EMAIL_SENDER: ${EMAIL_SENDER}