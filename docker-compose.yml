# docker-compose.yml in root directory
version: '3.8'

services:
  web:
    build: ./backend  # Changed from . to ./backend
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000
    volumes:
      - ./backend:/app  # Changed from . to ./backend
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - DATABASE_URL=postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      - REDIS_URL_CACHE=${REDIS_URL_CACHE}
      - REDIS_URL_QUEUE=${REDIS_URL_QUEUE}
      - SENDGRID_API_KEY=${SENDGRID_API_KEY}
      - EMAIL_SENDER=${EMAIL_SENDER}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - JWT_ALGORITHM=${JWT_ALGORITHM}
      - JWT_EXPIRATION_TIME=${JWT_EXPIRATION_TIME}
    env_file:
      - .env
    depends_on:
      - redis
      - postgres
    networks:
      - installment-net

  worker:
    build: ./backend
    command: python -m celery -A app.core.celery_app worker --pool=solo -l INFO -Q notifications
    volumes:
      - ./backend:/app
    env_file:
      - .env
    depends_on:
      - redis
      - postgres
    networks:
      - installment-net

  beat:
    build: ./backend
    command: python -m celery -A app.core.celery_app beat -l INFO
    volumes:
      - ./backend:/app
    env_file:
      - .env
    depends_on:
      - redis
      - postgres
    networks:
      - installment-net

  postgres:
    image: postgres:15-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}

    ports:
      - "5432:5432"
    networks:
      - installment-net

  redis:
    image: redis:7-alpine
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - installment-net

volumes:
  postgres_data:
  redis_data:

networks:
  installment-net:
    driver: bridge
